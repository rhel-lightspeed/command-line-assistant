specfile_path: packaging/command-line-assistant.spec
upstream_package_name: command-line-assistant
downstream_package_name: command-line-assistant
upstream_project_url: https://github.com/rhel-lightspeed/command-line-assistant

srpm_build_deps: []

jobs:
  # Build RPMs for each pull request
  - job: copr_build
    trigger: pull_request
    owner: "@rhel-lightspeed"
    project: command-line-assistant
    targets:
      - epel-9-x86_64
      - epel-10-x86_64
      - epel-9-aarch64
      - epel-10-aarch64
    actions:
      # do not get the version from a tag (git describe) but from the spec file
      get-current-version:
        - grep -oP '^Version:\s+\K\S+' packaging/command-line-assistant.spec

  # Build RPMs for main branch
  - job: copr_build
    trigger: commit
    branch: main
    owner: "@rhel-lightspeed"
    project: command-line-assistant
    targets:
      - epel-9-x86_64
      - epel-10-x86_64
      - epel-9-aarch64
      - epel-10-aarch64
    actions:
      # bump spec so we get release starting with 2 and hence all the default branch builds will
      # have higher NVR than all the PR builds
      post-upstream-clone:
        - rpmdev-bumpspec --comment='latest upstream build' ./packaging/command-line-assistant.spec
      # do not get the version from a tag (git describe) but from the spec file
      get-current-version:
        - grep -oP '^Version:\s+\K\S+' packaging/command-line-assistant.spec

  # Build RPMs for main branch
  - job: copr_build
    trigger: commit
    branch: develop
    owner: "@rhel-lightspeed"
    project: command-line-assistant
    targets:
      - epel-9-x86_64
      - epel-10-x86_64
      - epel-9-aarch64
      - epel-10-aarch64
    actions:
      # bump spec so we get release starting with 2 and hence all the default branch builds will
      # have higher NVR than all the PR builds
      post-upstream-clone:
        - rpmdev-bumpspec --comment='latest upstream build' ./packaging/command-line-assistant.spec
      # do not get the version from a tag (git describe) but from the spec file
      get-current-version:
        - grep -oP '^Version:\s+\K\S+' packaging/command-line-assistant.spec

  # Test jobs
  - &deterministic-tests
    job: tests
    identifier: deterministic-tests-virtual-machine
    manual_trigger: false
    trigger: pull_request
    fmf_url: "https://gitlab.cee.redhat.com/rhel-lightspeed/enhanced-shell/cla-tests"
    fmf_ref: main
    tmt_plan: "/plans/deterministic"
    use_internal_tf: True
    targets:
      epel-9-x86_64:
        distros: [RHEL-9-Nightly]
      epel-10-x86_64:
        distros: [RHEL-10-Nightly]
      epel-9-aarch64:
        distros: [RHEL-9-Nightly]
      epel-10-aarch64:
        distros: [RHEL-10-Nightly]
    tf_extra_params:
      environments:
        - settings:
            provisioning:
              tags:
                BusinessUnit: rhel_sst_lightspeed@upstream
    labels:
      - deterministic
      - vm
      - default

  # TODO: Once the https://issues.redhat.com/browse/RSPEED-390 is done we can run
  # the non deterministic (eval_answers tests)
  # - &eval-answers-tests-virtual-machine
  #   job: tests
  #   <<: *deterministic-tests
  #   identifier: eval-answers-tests-virtual-machine
  #   # Run tests on-demand
  #   manual_trigger: true
  #   tmt_plan: "/plans/eval_answers"
  #   labels:
  #     - eval-answers
  #     - eval-answers-vm
  #     - vm
